# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T10:53:45+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, BaseModel, Field, constr


class BulkexportsV1Export(BaseModel):
    links: Optional[Dict[str, Any]] = Field(
        None,
        description='Contains a dictionary of URL links to nested resources of this Export.',
    )
    resource_type: Optional[str] = Field(
        None,
        description='The type of communication – Messages, Calls, Conferences, and Participants',
    )
    url: Optional[AnyUrl] = Field(None, description='The URL of this resource.')


class BulkexportsV1ExportDay(BaseModel):
    create_date: Optional[str] = Field(
        None, description='The ISO 8601 format date when resources is created'
    )
    day: Optional[str] = Field(
        None,
        description='The ISO 8601 format date of the resources in the file, for a UTC day',
    )
    friendly_name: Optional[str] = Field(
        None, description='The friendly name specified when creating the job'
    )
    resource_type: Optional[str] = Field(
        None,
        description='The type of communication – Messages, Calls, Conferences, and Participants',
    )
    size: Optional[int] = Field(
        None, description="The size of the day's data file in bytes"
    )


class BulkexportsV1ExportDayInstance(BaseModel):
    redirect_to: Optional[AnyUrl] = None


class BulkexportsV1ExportExportCustomJob(BaseModel):
    details: Optional[Any] = Field(
        None,
        description='The details of a job which is an object that contains an array of status grouped by `status` state.  Each `status` object has a `status` string, a count which is the number of days in that `status`, and list of days in that `status`. The day strings are in the format yyyy-MM-dd. As an example, a currently running job may have a status object for COMPLETED and a `status` object for SUBMITTED each with its own count and list of days.',
    )
    email: Optional[str] = Field(
        None, description='The optional email to send the completion notification to'
    )
    end_day: Optional[str] = Field(
        None, description='The end day for the export specified when creating the job'
    )
    estimated_completion_time: Optional[str] = Field(
        None,
        description='this is the time estimated until your job is complete. This is calculated each time you request the job list. The time is calculated based on the current rate of job completion (which may vary) and your job queue position',
    )
    friendly_name: Optional[str] = Field(
        None, description='The friendly name specified when creating the job'
    )
    job_queue_position: Optional[str] = Field(
        None,
        description='This is the job position from the 1st in line. Your queue position will never increase. As jobs ahead of yours in the queue are processed, the queue position number will decrease',
    )
    job_sid: Optional[
        constr(pattern=r'^JS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique job_sid returned when the custom export was created',
    )
    resource_type: Optional[str] = Field(
        None,
        description='The type of communication – Messages, Calls, Conferences, and Participants',
    )
    start_day: Optional[str] = Field(
        None,
        description='The start day for the custom export specified when creating the job',
    )
    webhook_method: Optional[str] = Field(
        None,
        description='This is the method used to call the webhook on completion of the job. If this is supplied, `WebhookUrl` must also be supplied.',
    )
    webhook_url: Optional[str] = Field(
        None,
        description='The optional webhook url called on completion of the job. If this is supplied, `WebhookMethod` must also be supplied.',
    )


class BulkexportsV1ExportJob(BaseModel):
    details: Optional[Any] = Field(
        None,
        description='The details of a job which is an object that contains an array of status grouped by `status` state.  Each `status` object has a `status` string, a count which is the number of days in that `status`, and list of days in that `status`. The day strings are in the format yyyy-MM-dd. As an example, a currently running job may have a status object for COMPLETED and a `status` object for SUBMITTED each with its own count and list of days.',
    )
    email: Optional[str] = Field(
        None, description='The optional email to send the completion notification to'
    )
    end_day: Optional[str] = Field(
        None, description='The end time for the export specified when creating the job'
    )
    estimated_completion_time: Optional[str] = Field(
        None,
        description='this is the time estimated until your job is complete. This is calculated each time you request the job list. The time is calculated based on the current rate of job completion (which may vary) and your job queue position',
    )
    friendly_name: Optional[str] = Field(
        None, description='The friendly name specified when creating the job'
    )
    job_queue_position: Optional[str] = Field(
        None,
        description='This is the job position from the 1st in line. Your queue position will never increase. As jobs ahead of yours in the queue are processed, the queue position number will decrease',
    )
    job_sid: Optional[
        constr(pattern=r'^JS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='The job_sid returned when the export was created')
    resource_type: Optional[str] = Field(
        None,
        description='The type of communication – Messages, Calls, Conferences, and Participants',
    )
    start_day: Optional[str] = Field(
        None,
        description='The start time for the export specified when creating the job',
    )
    url: Optional[AnyUrl] = None
    webhook_method: Optional[str] = Field(
        None, description='This is the method used to call the webhook'
    )
    webhook_url: Optional[str] = Field(
        None, description='The optional webhook url called on completion'
    )


class BulkexportsV1ExportConfiguration(BaseModel):
    enabled: Optional[bool] = Field(
        None,
        description="If true, Twilio will automatically generate every day's file when the day is over.",
    )
    resource_type: Optional[str] = Field(
        None,
        description='The type of communication – Messages, Calls, Conferences, and Participants',
    )
    url: Optional[AnyUrl] = Field(None, description='The URL of this resource.')
    webhook_method: Optional[str] = Field(
        None,
        description='Sets whether Twilio should call a webhook URL when the automatic generation is complete, using GET or POST. The actual destination is set in the webhook_url',
    )
    webhook_url: Optional[AnyUrl] = Field(
        None,
        description='Stores the URL destination for the method specified in webhook_method.',
    )


class ExportCustomJobEnumStatus(Enum):
    ErrorDuringRun = 'ErrorDuringRun'
    Submitted = 'Submitted'
    Running = 'Running'
    CompletedEmptyRecords = 'CompletedEmptyRecords'
    Completed = 'Completed'
    Failed = 'Failed'
    RunningToBeDeleted = 'RunningToBeDeleted'
    DeletedByUserRequest = 'DeletedByUserRequest'


class JobEnumStatus(Enum):
    ErrorDuringRun = 'ErrorDuringRun'
    Submitted = 'Submitted'
    Running = 'Running'
    CompletedEmptyRecords = 'CompletedEmptyRecords'
    Completed = 'Completed'
    Failed = 'Failed'
    RunningToBeDeleted = 'RunningToBeDeleted'
    DeletedByUserRequest = 'DeletedByUserRequest'


class V1ExportsResourceTypeConfigurationPostRequest(BaseModel):
    Enabled: Optional[bool] = Field(
        None,
        description="If true, Twilio will automatically generate every day's file when the day is over.",
    )
    WebhookMethod: Optional[str] = Field(
        None,
        description='Sets whether Twilio should call a webhook URL when the automatic generation is complete, using GET or POST. The actual destination is set in the webhook_url',
    )
    WebhookUrl: Optional[AnyUrl] = Field(
        None,
        description='Stores the URL destination for the method specified in webhook_method.',
    )


class Meta(BaseModel):
    first_page_url: Optional[AnyUrl] = None
    key: Optional[str] = None
    next_page_url: Optional[AnyUrl] = None
    page: Optional[int] = None
    page_size: Optional[int] = None
    previous_page_url: Optional[AnyUrl] = None
    url: Optional[AnyUrl] = None


class V1ExportsResourceTypeDaysGetResponse(BaseModel):
    days: Optional[List[BulkexportsV1ExportDay]] = None
    meta: Optional[Meta] = None


class V1ExportsResourceTypeJobsGetResponse(BaseModel):
    jobs: Optional[List[BulkexportsV1ExportExportCustomJob]] = None
    meta: Optional[Meta] = None


class V1ExportsResourceTypeJobsPostRequest(BaseModel):
    Email: Optional[str] = Field(
        None,
        description="The optional email to send the completion notification to. You can set both webhook, and email, or one or the other. If you set neither, the job will run but you will have to query to determine your job's status.",
    )
    EndDay: str = Field(
        ...,
        description='The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day.',
    )
    FriendlyName: str = Field(
        ..., description='The friendly name specified when creating the job'
    )
    StartDay: str = Field(
        ...,
        description='The start day for the custom export specified as a string in the format of yyyy-mm-dd',
    )
    WebhookMethod: Optional[str] = Field(
        None,
        description='This is the method used to call the webhook on completion of the job. If this is supplied, `WebhookUrl` must also be supplied.',
    )
    WebhookUrl: Optional[str] = Field(
        None,
        description="The optional webhook url called on completion of the job. If this is supplied, `WebhookMethod` must also be supplied. If you set neither webhook nor email, you will have to check your job's status manually.",
    )
